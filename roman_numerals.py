# Дано: целое число (int).
#
# Задание: Римские цифры пришли к нам из древней римской системы счета. Они основаны на особых буквах алфавита, которые
# в различных сочетаниях, путем суммирования (а иногда и разницы) описывают различные числа. Первые 10 римских чисел это:
# I, II, III, IV, V, VI, VII, VIII, IX, and X.
# Римская система счета имеет десятичное основание, но она непозиционная и не включает в себя 0 (ноль). Римские
# числа образуются путем комбинации следующих семи символов:
# Символ Значение I 1 (unus) V 5 (quinque) X 10 (decem) L 50 (quinquaginta) C 100 (centum) D 500 (quingenti)
# M 1,000 (mille) Узнать больше о римских цифрах вы можете в статье на Википедии.
#
# В этой задаче, вам необходимо преобразовать данное целое число (от 1 до 3999) в римскую систему счета.

#Функция ввода числа (попытки разделить функционал между собой)
def input_arabic_num():
    print('\nExercise 2 - Roman numerals')
    print('Введите число от 1 до 3999')
    arabic_num = int(input())

    arabic_to_roman(arabic_num)


#Функция перевода арабских цифр в римские
def arabic_to_roman(arabic_num):

    dict_arabic_roman = {}
    roman_num = ''

    #Создание словаря. Выбраны ключевые значения и исключения из римского алфавита
    list_arabic_num = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
    list_roman_num = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I']

    dict_arabic_roman = dict(zip(list_arabic_num, list_roman_num))

    #Прохождение по словарю, по каждому ключевому значению из римского алфавита
    # 1) Итоговому значению приписывается результат целочисленного деления на ключевую
    # цифру (интерпретацию в арабском алфавите и умножается
    # на символ из римского алфавита)
    # 2) отбрасываем проверенную большую часть и переход к меньшему
    for key, value in dict_arabic_roman.items():

        roman_num += arabic_num // key * value
        arabic_num %= key

    print(roman_num)

def main():
    input_arabic_num()